plugins {
	id 'fabric-loom' version '1.11-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	mavenCentral()

	repositories {
		maven {
			name = "Terraformers"
			url = "https://maven.terraformersmc.com/"
		}
	}
	maven {
		name 'Xander Maven'
		url 'https://maven.isxander.dev/releases'
	}
}



loom {
    splitEnvironmentSourceSets()
}

sourceSets {
    testmod {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
        compileClasspath += main.output
        runtimeClasspath += main.output
        compileClasspath += client.compileClasspath
        runtimeClasspath += client.runtimeClasspath
        compileClasspath += client.output
        runtimeClasspath += client.output
    }
}

loom {
    mods {
        "hudlib" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
            sourceSet sourceSets.testmod
        }
        "hudlib-testmod" {
            sourceSet sourceSets.testmod
        }
    }
    runs {
        testmod {
            client()
            ideConfigGenerated = true
            name = "Testmod"
            source sourceSets.testmod
        }
    }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "dev.isxander:yet-another-config-lib:${project.yacl_version}"

	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}
tasks.withType(JavaExec).configureEach {
	jvmArgs += [
			'--add-opens', 'java.base/java.lang=ALL-UNNAMED',
			'--add-opens', 'java.base/java.lang.reflect=ALL-UNNAMED',
			'--add-opens', 'java.desktop/java.awt=ALL-UNNAMED',
			'--add-opens', 'java.base/java.util=ALL-UNNAMED'
	]
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/electricsteve/hudlib" // SHOULD BE CHANGED WHEN MERGING TO MAIN REPO
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
	}
}